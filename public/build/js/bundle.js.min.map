{"version":3,"sources":["asistencia.js","botonAsistencia.js","filtro-lista.js","filtro-talla.js","filtros.js","galeria.js","hamburguesa.js","sweetAlert.js"],"names":["document","addEventListener","filtroCategoria","getElementById","filtroMes","selectVista","selectCategoria","selectMes","generalProv","generalOfi","tables","prov","9","10","11","12","1","2","3","4","5","ofi","ocultarTablas","key","classList","add","mostrarTablas","tipo","remove","manejarVista","vistaSeleccionada","value","actualizarFiltrado","actualizarEventListenersCopia","categoriaSeleccionada","mesSeleccionado","agregarEventListenerCopia","icono","table","columnaIndex","event","stopPropagation","contenido","querySelectorAll","forEach","row","cell","cells","contains","textContent","trim","navigator","clipboard","writeText","then","setTimeout","Swal","fire","icon","title","err","console","error","copiarContenidoColumna","offsetWidth","closest","Array","from","parentElement","children","indexOf","newIcono","cloneNode","replaceWith","button","index","hiddenInput","getAttribute","parentNode","btn","log","seleccionarAsiste","inputNombre","filas","quitarAcentos","texto","normalize","replace","filtro","toLowerCase","fila","querySelector","includes","style","display","selectCamiseta","selectCalzona","selectChandal","selectCviento","tablaUsuarios","restableceFiltrusBtn","copiarNombrusIcon","copiarCamisetusIcon","copiarCalzonusIcon","copiarChandalusIcon","copiarCortavientusIcon","contenidoColumna","usuario","columnasUsuario","text","filtrarPorTalla","select","columna","valorSeleccionado","this","valorUsuario","length","selectedIndex","filtroNombre","nombreElemento","mostrarRecuento","miembrosFiltrados","recuentoElemento","innerHTML","spanTotal","createElement","color","fontWeight","totalPersonas","appendChild","insertAdjacentText","async","url","resultado","fetch","datos","json","miembros","Object","values","filtrar","filtroPack","filtroPago","filter","miembro","apellido1","apellido2","nombre","categoria_id","pack_id","pendiente_pagar","total_a_pagar","parseInt","cuota_pendiente_tras_primer_pago","cuota_pendiente_tras_segundo_pago","mostrarResultados","tbody","tr","nombreCompleto","tdNombre","setAttribute","tdCategoria","nombre_categoria","tdEmail","email","tdTelefono","telefono","tdPack","nombre_pack","tdPendiente","isAdmin","tdAcciones","editarLink","href","id","formEliminar","method","action","inputId","type","name","botonEliminar","td","miembrosEmails","emails","map","join","nombresFiltrados","consultarAPI","imagenes","cerrarModal","modal","imagen","onclick","cerrarModalBtn","imagenModal","src","alt","generarModal","barra","nav","boton","toggle","registrer_btn"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n        // Div de los filtros de asistencia:\r\n        const filtroCategoria = document.getElementById('categoria_asistencia');\r\n        const filtroMes = document.getElementById('mes_asistencia');\r\n        \r\n        // Select de cada filtro:\r\n        const selectVista = document.getElementById('vista_select');\r\n        const selectCategoria = document.getElementById('categoria_select');\r\n        const selectMes = document.getElementById('select_mes');\r\n\r\n        // Selecciona tablas generales\r\n        const generalProv = document.getElementById('general_prov');\r\n        const generalOfi = document.getElementById('general_ofi');\r\n\r\n        // Selecciona todas las tablas por meses y categorías:\r\n        const tables = {\r\n            prov: {\r\n                '9': document.getElementById('sept_prov'),\r\n                '10': document.getElementById('oct_prov'),\r\n                '11': document.getElementById('nov_prov'),\r\n                '12': document.getElementById('dic_prov'),\r\n                '1': document.getElementById('ene_prov'),\r\n                '2': document.getElementById('feb_prov'),\r\n                '3': document.getElementById('mar_prov'),\r\n                '4': document.getElementById('abr_prov'),\r\n                '5': document.getElementById('may_prov')\r\n            },\r\n            ofi: {\r\n                '9': document.getElementById('sept_ofi'),\r\n                '10': document.getElementById('oct_ofi'),\r\n                '11': document.getElementById('nov_ofi'),\r\n                '12': document.getElementById('dic_ofi'),\r\n                '1': document.getElementById('ene_ofi'),\r\n                '2': document.getElementById('feb_ofi'),\r\n                '3': document.getElementById('mar_ofi'),\r\n                '4': document.getElementById('abr_ofi'),\r\n                '5': document.getElementById('may_ofi')\r\n            }\r\n        };\r\n\r\n        function ocultarTablas() {\r\n            for (let key in tables.prov) {\r\n                tables.prov[key].classList.add('oculto');\r\n                tables.ofi[key].classList.add('oculto');\r\n            }\r\n        }\r\n\r\n        function mostrarTablas(tipo) {\r\n            for (let key in tables[tipo]) {\r\n                tables[tipo][key].classList.remove('oculto');\r\n            }\r\n        }\r\n\r\n        function manejarVista() {\r\n            const vistaSeleccionada = selectVista.value;\r\n\r\n            if (vistaSeleccionada === '1') {\r\n                filtroCategoria.classList.add('oculto--filtro');\r\n                filtroMes.classList.add('oculto--filtro');\r\n                generalProv.classList.remove('oculto');\r\n                generalOfi.classList.remove('oculto');\r\n                ocultarTablas();\r\n            } else if (vistaSeleccionada === '2') {\r\n                filtroCategoria.classList.remove('oculto--filtro');\r\n                filtroMes.classList.remove('oculto--filtro');\r\n                generalProv.classList.add('oculto');\r\n                generalOfi.classList.add('oculto');\r\n                actualizarFiltrado();\r\n            }\r\n            actualizarEventListenersCopia(); // Asegurarse de actualizar los event listeners\r\n        }\r\n\r\n        function actualizarFiltrado() {\r\n            ocultarTablas();\r\n\r\n            const categoriaSeleccionada = selectCategoria.value;\r\n            const mesSeleccionado = selectMes.value;\r\n\r\n            if (categoriaSeleccionada === '1') {\r\n                if (mesSeleccionado === '') {\r\n                    mostrarTablas('prov');\r\n                    mostrarTablas('ofi');\r\n                } else {\r\n                    tables.prov[mesSeleccionado].classList.remove('oculto');\r\n                    tables.ofi[mesSeleccionado].classList.remove('oculto');\r\n                }\r\n            } else if (categoriaSeleccionada === '2') {\r\n                if (mesSeleccionado === '') {\r\n                    mostrarTablas('prov');\r\n                } else {\r\n                    tables.prov[mesSeleccionado].classList.remove('oculto');\r\n                }\r\n            } else if (categoriaSeleccionada === '3') {\r\n                if (mesSeleccionado === '') {\r\n                    mostrarTablas('ofi');\r\n                } else {\r\n                    tables.ofi[mesSeleccionado].classList.remove('oculto');\r\n                }\r\n            }\r\n            actualizarEventListenersCopia();\r\n        }\r\n\r\n        function copiarContenidoColumna(table, columnaIndex) {\r\n            let contenido = '';\r\n            table.querySelectorAll('tbody tr').forEach(row => {\r\n                const cell = row.cells[columnaIndex];\r\n                if (cell && !row.classList.contains('oculto')) {\r\n                    contenido += cell.textContent.trim() + '\\n';\r\n                }\r\n            });\r\n            navigator.clipboard.writeText(contenido).then(() => {\r\n                setTimeout(() => {\r\n                    Swal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Copiado al portapapeles!\"\r\n                    });\r\n                }, 700); // Agregar un retraso de 500 ms\r\n            }, err => {\r\n                console.error('Error al copiar al portapapeles: ', err);\r\n            });\r\n        }\r\n\r\n        function agregarEventListenerCopia(icono, table, columnaIndex) {\r\n            icono.addEventListener('click', function(event) {\r\n                event.stopPropagation(); // Asegurarse de que el evento no se propague\r\n                copiarContenidoColumna(table, columnaIndex); // Copiar el contenido de la columna correspondiente de la tabla\r\n                \r\n                icono.classList.add('animate__animated', 'animate__rubberBand');\r\n                // Reiniciar la animación:\r\n                icono.classList.remove('animate__rubberBand'); // Eliminar la clase para reiniciar la animación\r\n                void icono.offsetWidth; // Forzar el reflow\r\n                icono.classList.add('animate__rubberBand');\r\n            });\r\n        }\r\n\r\n        function actualizarEventListenersCopia() {\r\n            document.querySelectorAll('.icono-copy').forEach(icono => {\r\n                const table = icono.closest('table');\r\n                const columnaIndex = Array.from(icono.parentElement.parentElement.children).indexOf(icono.parentElement);\r\n                const newIcono = icono.cloneNode(true); // Crear un clon del icono\r\n                icono.replaceWith(newIcono); // Remover el icono viejo con event listeners previos\r\n                agregarEventListenerCopia(newIcono, table, columnaIndex); // Agregar el nuevo event listener\r\n            });\r\n        }\r\n\r\n        selectVista.addEventListener('change', manejarVista);\r\n        selectCategoria.addEventListener('change', actualizarFiltrado);\r\n        selectMes.addEventListener('change', actualizarFiltrado);\r\n\r\n        manejarVista(); // Inicializar la vista con los valores actuales\r\n    });\r\n})();\r\n","(function() {\r\n    // Función para seleccionar la opción de asistencia\r\n    function seleccionarAsiste(index, button) {\r\n        // Obtener el campo oculto correspondiente al miembro actual\r\n        const hiddenInput = document.getElementById('asiste_' + index);\r\n        \r\n        // Actualizar el valor del campo oculto según la selección del usuario\r\n        hiddenInput.value = button.getAttribute('data-value');\r\n        \r\n        // Remover la clase 'selected' de todos los botones dentro del mismo contenedor\r\n        let buttons = button.parentNode.querySelectorAll('.btn-asiste');\r\n        buttons.forEach(btn => btn.classList.remove('selected'));\r\n        \r\n        // Añadir la clase 'selected' al botón que fue clicado\r\n        button.classList.add('selected');\r\n\r\n        console.log(hiddenInput)\r\n    }\r\n\r\n    // Seleccionar todos los botones con la clase 'btn-asiste' y agregarles un evento 'click'\r\n    document.querySelectorAll('.btn-asiste').forEach(button => {\r\n        button.addEventListener('click', function() {\r\n            // Obtener el índice desde el atributo 'data-index' del botón\r\n            const index = button.getAttribute('data-index');\r\n            \r\n            // Llamar a la función 'seleccionarAsiste' pasando el índice y el botón como parámetros\r\n            seleccionarAsiste(index, button);\r\n        });\r\n    });\r\n})();","(function() {\r\n    document.addEventListener(\"DOMContentLoaded\", function() {\r\n        // Obtener referencia al campo de entrada\r\n        var inputNombre = document.getElementById(\"f_nombre\");\r\n        \r\n        // Obtener todas las filas de la tabla\r\n        var filas = document.querySelectorAll(\".table-lista__tr\");\r\n\r\n        function quitarAcentos(texto) {\r\n            return texto.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n        }\r\n        \r\n        // Agregar un evento de escucha para el evento de entrada en el campo de nombre\r\n        inputNombre.addEventListener(\"input\", function() {\r\n            var filtro = quitarAcentos(inputNombre.value.toLowerCase()); // Convertir a minúsculas y quitar acentos para comparación sin distinción entre mayúsculas y minúsculas y sin acentos\r\n        \r\n            // Iterar sobre cada fila de la tabla\r\n            filas.forEach(function(fila) {\r\n                // Obtener el contenido del nombre en la fila actual y quitar acentos\r\n                var nombreCompleto = quitarAcentos(fila.querySelector(\".table-lista__td--nombre\").textContent.toLowerCase());\r\n                \r\n                // Comprobar si el nombre coincide con el filtro\r\n                if (nombreCompleto.includes(filtro)) {\r\n                    // Si coincide, mostrar la fila\r\n                    fila.style.display = \"\";\r\n                } else {\r\n                    // Si no coincide, ocultar la fila\r\n                    fila.style.display = \"none\";\r\n                }\r\n            });\r\n        });\r\n    });\r\n})();","(function() {\r\n    // Obtener referencia a los elementos del DOM\r\n    const inputNombre = document.getElementById('t_nombrus_filtrus');\r\n    const selectCamiseta = document.getElementById('camiseta');\r\n    const selectCalzona = document.getElementById('calzona');\r\n    const selectChandal = document.getElementById('chandal');\r\n    const selectCviento = document.getElementById('cviento');\r\n    const tablaUsuarios = document.querySelectorAll('.table__tr');\r\n    const restableceFiltrusBtn = document.getElementById('restableceFiltrus');\r\n    const copiarNombrusIcon = document.getElementById('copiarNombrus');\r\n    const copiarCamisetusIcon = document.getElementById('copiarCamisetus');\r\n    const copiarCalzonusIcon = document.getElementById('copiarCalzonus');\r\n    const copiarChandalusIcon = document.getElementById('copiarChandalus');\r\n    const copiarCortavientusIcon = document.getElementById('copiarCortavientus');\r\n\r\n    if (!inputNombre || !selectCamiseta || !selectCalzona || !selectChandal || !selectCviento || tablaUsuarios.length === 0) {\r\n        console.error(\"¡Alguno de los elementos no se ha encontrado!\");\r\n        return;\r\n    }\r\n\r\n    // Función para restablecer los filtros a sus valores por defecto\r\n    function restablecerFiltros() {\r\n        inputNombre.value = ''; // Limpiar el valor del input de nombre\r\n        selectCamiseta.selectedIndex = 0; // Restablecer el select de camiseta al primer elemento (opción \"Ver todos\")\r\n        selectCalzona.selectedIndex = 0; // Restablecer el select de calzona al primer elemento (opción \"Ver todos\")\r\n        selectChandal.selectedIndex = 0; // Restablecer el select de chandal al primer elemento (opción \"Ver todos\")\r\n        selectCviento.selectedIndex = 0; // Restablecer el select de cviento al primer elemento (opción \"Ver todos\")\r\n        // Mostrar todos los usuarios en la tabla\r\n        tablaUsuarios.forEach(usuario => {\r\n            usuario.style.display = '';\r\n        });\r\n    }\r\n\r\n    // Función para copiar el contenido de una columna al portapapeles\r\n    function copiarContenidoColumna(columnaIndex) {\r\n        let contenidoColumna = '';\r\n        tablaUsuarios.forEach(usuario => {\r\n            if (usuario.style.display !== 'none') { // Verificar si el usuario está visible\r\n                const columnasUsuario = usuario.querySelectorAll('.table__td');\r\n                contenidoColumna += columnasUsuario[columnaIndex].textContent.trim() + '\\n';\r\n            }\r\n        });\r\n\r\n        // Copiar contenido al portapapeles\r\n        navigator.clipboard.writeText(contenidoColumna).then(function() {\r\n            setTimeout(function() {\r\n                Swal.fire({\r\n                    icon: \"success\",\r\n                    title: \"¡Hecho!\",\r\n                    text: \"Copiado al portapapeles\",\r\n                  });\r\n            }, 700); // Mostrar la alerta después de medio segundo\r\n        }, function(err) {\r\n            console.error('Error al copiar contenido al portapapeles:', err);\r\n        });\r\n    }\r\n\r\n    // Agregar event listener al botón \"restableceFiltrus\"\r\n    restableceFiltrusBtn.addEventListener('click', restablecerFiltros);\r\n\r\n    // Agregar event listeners a los iconos de copia\r\n    function agregarEventListenerCopia(icono, columnaIndex) {\r\n        icono.addEventListener('click', function() {\r\n            copiarContenidoColumna(columnaIndex); // Copiar el contenido de la columna correspondiente\r\n            icono.classList.add('animate__animated', 'animate__rubberBand'); // Agregar clase de animación al icono\r\n            icono.classList.remove('animate__rubberBand'); // Eliminar la clase para reiniciar la animación\r\n            void icono.offsetWidth; // Activar un reflow\r\n            icono.classList.add('animate__rubberBand');\r\n        });\r\n    }\r\n\r\n    agregarEventListenerCopia(copiarNombrusIcon, 0); // 0 es el índice de la columna \"Nombre\"\r\n    agregarEventListenerCopia(copiarCamisetusIcon, 1); // 1 es el índice de la columna \"Camiseta\"\r\n    agregarEventListenerCopia(copiarCalzonusIcon, 2); // 2 es el índice de la columna \"Calzonas\"\r\n    agregarEventListenerCopia(copiarChandalusIcon, 3); // 3 es el índice de la columna \"Chandal\"\r\n    agregarEventListenerCopia(copiarCortavientusIcon, 4); // 4 es el índice de la columna \"Cortavientos\"\r\n\r\n    function quitarAcentos(texto) {\r\n        return texto.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n\r\n    inputNombre.addEventListener('input', function() {\r\n        const filtroNombre = quitarAcentos(this.value.trim().toLowerCase()); // Obtener el valor del input y convertirlo a minúsculas sin acentos\r\n        tablaUsuarios.forEach(usuario => {\r\n            const nombreElemento = usuario.querySelector('#td_nombre');\r\n            if (nombreElemento) {\r\n                const nombreCompleto = quitarAcentos(nombreElemento.textContent.trim().toLowerCase()); // Obtener el nombre completo del usuario de la tabla y convertirlo a minúsculas sin acentos\r\n                if (nombreCompleto.includes(filtroNombre)) {\r\n                    usuario.style.display = ''; // Mostrar el usuario si coincide con el filtro\r\n                } else {\r\n                    usuario.style.display = 'none'; // Ocultar el usuario si no coincide con el filtro\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    // Función para filtrar por talla en los select\r\n    function filtrarPorTalla(select, columna) {\r\n        select.addEventListener('change', function() {\r\n            const valorSeleccionado = this.value;\r\n            tablaUsuarios.forEach(usuario => {\r\n                const valorUsuario = usuario.querySelector(columna).getAttribute('data-value');\r\n                if (valorUsuario === valorSeleccionado || valorSeleccionado === '') {\r\n                    usuario.style.display = ''; // Mostrar el usuario si coincide con el filtro o si no se ha seleccionado ninguna talla\r\n                } else {\r\n                    usuario.style.display = 'none'; // Ocultar el usuario si no coincide con el filtro\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Aplicar filtros por talla para cada select\r\n    filtrarPorTalla(selectCamiseta, '#td_camiseta');\r\n    filtrarPorTalla(selectCalzona, '#td_calzonas');\r\n    filtrarPorTalla(selectChandal, '#td_chandal');\r\n    filtrarPorTalla(selectCviento, '#td_chubasquero');\r\n})();","(function () {\r\n    // Consultar la API de miembros en el backend de PHP\r\n    consultarAPI();\r\n    \r\n\r\n    async function consultarAPI() {\r\n        try {\r\n            const url = 'http://localhost:3000/api/miembros';\r\n            const resultado = await fetch(url);\r\n            const datos = await resultado.json();\r\n            \r\n\r\n            // Obtener un array de objetos a partir de las propiedades del objeto JSON\r\n            const miembros = Object.values(datos);\r\n\r\n            // Llamo a la función para mostrar todos los miembros\r\n            mostrarRecuento(miembros)\r\n\r\n            // Función para filtrar los miembros según los criterios seleccionados\r\n            function filtrar() {\r\n                const filtroNombre = document.getElementById('nombre').value.toLowerCase();\r\n                const filtroCategoria = document.getElementById('categoria').value;\r\n                const filtroPack = document.getElementById('filtroPack').value;\r\n                const filtroPago = document.getElementById('filtroPago').value;\r\n\r\n                // Filtrar por nombre\r\n                let miembrosFiltrados = miembros.filter(miembro => {\r\n                    const nombreCompleto = `${miembro.apellido1} ${miembro.apellido2}, ${miembro.nombre}`; // Formato apellido1 apellido2, nombre\r\n                    return nombreCompleto.toLowerCase().includes(filtroNombre);\r\n                });\r\n\r\n                // Filtrar por categoría\r\n                if (filtroCategoria) {\r\n                    miembrosFiltrados = miembrosFiltrados.filter(miembro => miembro.categoria_id === filtroCategoria);\r\n                }\r\n\r\n                // Filtrar por pack\r\n                if (filtroPack) {\r\n                    miembrosFiltrados = miembrosFiltrados.filter(miembro => miembro.pack_id === filtroPack);\r\n                }\r\n\r\n                // Filtrar por estado de pago\r\n                if (filtroPago) {\r\n                    miembrosFiltrados = miembrosFiltrados.filter(miembro => {\r\n                        if (filtroPago === '6') {\r\n                            return miembro.pendiente_pagar === miembro.total_a_pagar;\r\n                        } else if (filtroPago === '7') {\r\n                            return parseInt(miembro.pendiente_pagar) === miembro.cuota_pendiente_tras_primer_pago;\r\n                        } else if (filtroPago === '8') {\r\n                            return parseInt(miembro.pendiente_pagar) === miembro.cuota_pendiente_tras_segundo_pago;\r\n                        } else {\r\n                            return true;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                mostrarRecuento(miembrosFiltrados);\r\n\r\n                mostrarResultados(miembrosFiltrados);\r\n            }\r\n\r\n            // Agregar event listeners para los cambios en los filtros\r\n            document.getElementById('nombre').addEventListener('input', filtrar);\r\n            document.getElementById('categoria').addEventListener('change', filtrar);\r\n            document.getElementById('filtroPack').addEventListener('change', filtrar);\r\n            document.getElementById('filtroPago').addEventListener('change', filtrar);\r\n\r\n            // Función para mostrar los resultados en la interfaz\r\n            function mostrarResultados(miembrosFiltrados) {\r\n                const tbody = document.querySelector('.table__tbody');\r\n                // Limpiar tabla\r\n                tbody.innerHTML = '';\r\n\r\n                if (miembrosFiltrados.length > 0) {\r\n                    // Crear filas de la tabla con los miembros filtrados\r\n                    miembrosFiltrados.forEach(miembro => {\r\n                        const tr = document.createElement('tr');\r\n                        tr.classList.add('table__tr');\r\n\r\n                        // Crear celdas de la fila con la información del miembro\r\n                        const nombreCompleto = `${miembro.apellido1} ${miembro.apellido2}, ${miembro.nombre}`; // Formato apellido1 apellido2, nombre\r\n                        const tdNombre = document.createElement('td');\r\n                        tdNombre.classList.add('table__td');\r\n                        tdNombre.textContent = nombreCompleto;\r\n                        tdNombre.setAttribute('data-label', 'Nombre:');\r\n                        tr.appendChild(tdNombre);\r\n\r\n                        const tdCategoria = document.createElement('td');\r\n                        tdCategoria.classList.add('table__td');\r\n                        tdCategoria.textContent = miembro.nombre_categoria;\r\n                        tdCategoria.setAttribute('data-label', 'Categoría:');\r\n                        tr.appendChild(tdCategoria);\r\n\r\n                        const tdEmail = document.createElement('td');\r\n                        tdEmail.classList.add('table__td');\r\n                        tdEmail.textContent = miembro.email;\r\n                        tdEmail.setAttribute('data-label', 'Email:');\r\n                        tr.appendChild(tdEmail);\r\n\r\n                        const tdTelefono = document.createElement('td');\r\n                        tdTelefono.classList.add('table__td');\r\n                        tdTelefono.textContent = miembro.telefono;\r\n                        tdTelefono.setAttribute('data-label', 'Teléfono:');\r\n                        tr.appendChild(tdTelefono);\r\n\r\n                        const tdPack = document.createElement('td');\r\n                        tdPack.classList.add('table__td');\r\n                        tdPack.textContent = miembro.nombre_pack;\r\n                        tdPack.setAttribute('data-label', 'Pack:');\r\n                        tr.appendChild(tdPack);\r\n\r\n                        const tdPendiente = document.createElement('td');\r\n                        tdPendiente.classList.add('table__td');\r\n                        tdPendiente.textContent = `${miembro.pendiente_pagar}.00 €`;\r\n                        tdPendiente.setAttribute('data-label', 'Pendiente:');\r\n                        tr.appendChild(tdPendiente);\r\n                        console.log(isAdmin);\r\n\r\n                        if (isAdmin) {\r\n                            const tdAcciones = document.createElement('td');\r\n                            tdAcciones.classList.add('table__td--acciones');\r\n\r\n                            const editarLink = document.createElement('a');\r\n                            editarLink.classList.add('table__accion', 'table__accion--editar');\r\n                            editarLink.href = `/admin/miembros/editar?id=${miembro.id}`;\r\n                            editarLink.innerHTML = '<i class=\"fa-solid fa-user-pen\"></i>Editar';\r\n                            tdAcciones.appendChild(editarLink);\r\n\r\n                            const formEliminar = document.createElement('form');\r\n                            formEliminar.method = 'POST';\r\n                            formEliminar.action = '/admin/miembros/eliminar';\r\n                            formEliminar.classList.add('table__formulario');\r\n                            const inputId = document.createElement('input');\r\n                            inputId.type = 'hidden';\r\n                            inputId.name = 'id';\r\n                            inputId.value = miembro.id;\r\n                            formEliminar.appendChild(inputId);\r\n                            const botonEliminar = document.createElement('button');\r\n                            botonEliminar.type = 'submit';\r\n                            botonEliminar.classList.add('table__accion', 'table__accion--eliminar');\r\n                            botonEliminar.innerHTML = '<i class=\"fa-solid fa-circle-xmark\"></i>Eliminar';\r\n                            formEliminar.appendChild(botonEliminar);\r\n                            tdAcciones.appendChild(formEliminar);\r\n\r\n                            tr.appendChild(tdAcciones);\r\n                        }\r\n\r\n                        tbody.appendChild(tr);\r\n                    });\r\n                } else {\r\n                    // Mostrar mensaje si no hay resultados\r\n                    const tr = document.createElement('tr');\r\n                    const td = document.createElement('td');\r\n                    td.textContent = 'No hay miembros registrados';\r\n                    td.classList.add('text-center', 'padding'); // Agregar la clase \"padding\"\r\n                    td.setAttribute('colspan', '7');\r\n                    tr.appendChild(td);\r\n                    tbody.appendChild(tr);\r\n                }\r\n            }\r\n\r\n            // Mostrar todos los miembros al cargar la página\r\n            mostrarResultados(miembros);\r\n\r\n            // Event listener para el botón \"Restablecer filtros\"\r\n            document.getElementById('restablecerFiltros').addEventListener('click', function() {\r\n                // Restablecer los valores de los selectores de categoría, pack y pago\r\n                document.getElementById('categoria').value = '';\r\n                document.getElementById('filtroPack').value = '';\r\n                document.getElementById('filtroPago').value = '';\r\n                // Filtrar nuevamente los miembros\r\n                filtrar();\r\n            });\r\n\r\n            // Event listener para el botón \"Copiar Emails\"\r\n            document.getElementById('copiarEmails').addEventListener('click', function() {\r\n                const icono = document.querySelector('#copiarEmails');\r\n                icono.classList.add('animate__animated', 'animate__rubberBand');\r\n                icono.classList.remove('animate__rubberBand'); // Eliminar la clase para reiniciar la animación\r\n                void icono.offsetWidth; // Activar un reflow\r\n                icono.classList.add('animate__rubberBand'); // Agregar la clase nuevamente\r\n                \r\n                const miembrosEmails = document.querySelectorAll('.table__tbody .table__td:nth-child(3)'); // Selecciona todas las celdas de correo electrónico en la tabla\r\n                const emails = Array.from(miembrosEmails).map(td => td.textContent.trim()).join('\\n'); // Obtiene los textos de las celdas y los une con saltos de línea\r\n                navigator.clipboard.writeText(emails); // Copia los correos electrónicos al portapapeles\r\n                setTimeout(function() {\r\n                    Swal.fire({\r\n                        icon: \"success\",\r\n                        title: \"¡Hecho!\",\r\n                        text: \"Emails copiados al portapapeles\",\r\n                      });\r\n                }, 700); // Mostrar la alerta después de medio segundo\r\n                console.log('Emails copiados al portapapeles');\r\n            });\r\n\r\n            // Event listener para el botón \"Copiar nombre\"\r\n            document.getElementById('copiarNombres').addEventListener('click', function() {\r\n                const icono = document.querySelector('#copiarNombres');\r\n                icono.classList.add('animate__animated', 'animate__rubberBand');\r\n                icono.classList.remove('animate__rubberBand'); // Eliminar la clase para reiniciar la animación\r\n                void icono.offsetWidth; // Activar un reflow\r\n                icono.classList.add('animate__rubberBand'); // Agregar la clase nuevamente\r\n\r\n                // Obtener los nombres de los miembros filtrados actualmente\r\n                const nombresFiltrados = Array.from(document.querySelectorAll('.table__tbody .table__td:nth-child(1)'))\r\n                    .map(td => td.textContent.trim())\r\n                    .join('\\n');\r\n\r\n                // Copiar al portapapeles\r\n                navigator.clipboard.writeText(nombresFiltrados).then(function() {\r\n                    console.log('Nombres copiados al portapapeles');\r\n                    setTimeout(function() {\r\n                        Swal.fire({\r\n                            icon: \"success\",\r\n                            title: \"¡Hecho!\",\r\n                            text: \"Nombres copiados al portapapeles\",\r\n                          });\r\n                    }, 700); // Mostrar la alerta después de medio segundo\r\n                }, function(err) {\r\n                    console.error('Error al copiar nombres: ', err);\r\n                });\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    function mostrarRecuento(miembrosFiltrados) {\r\n        const recuentoElemento = document.getElementById('recuento-miembros');\r\n        if (miembrosFiltrados.length > 0) {\r\n            recuentoElemento.innerHTML = ''; // Limpiar contenido existente\r\n            const spanTotal = document.createElement('span');\r\n            spanTotal.textContent = 'Total: ';\r\n            spanTotal.style.color = '#principal'; // Utiliza el color definido en tu archivo de estilos\r\n            spanTotal.style.fontWeight = 'bold'; // Utiliza el peso de la fuente definido en tu archivo de estilos\r\n    \r\n            const totalPersonas = miembrosFiltrados.length === 1 ? `${miembrosFiltrados.length} persona` : `${miembrosFiltrados.length} personas`;\r\n    \r\n            recuentoElemento.appendChild(spanTotal);\r\n            recuentoElemento.insertAdjacentText('beforeend', totalPersonas);\r\n            recuentoElemento.style.display = 'block'; // Mostrar la caja de recuento\r\n        } else {\r\n            recuentoElemento.style.display = 'none'; // Ocultar la caja de recuento\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    // Selecciona todas las imágenes (<img>) dentro de los elementos <picture>\r\n    const imagenes = document.querySelectorAll('picture img');\r\n\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n        mostrarImagen();\r\n    });\r\n\r\n    function mostrarImagen() {\r\n        // Itera sobre cada imagen\r\n        imagenes.forEach(function(imagen) {\r\n            // Agrega un evento de clic a cada imagen\r\n            imagen.onclick = function() {\r\n                generarModal(imagen);\r\n            }\r\n        });\r\n    }\r\n\r\n    function generarModal(imagen) {\r\n        // Crea un elemento div para el modal\r\n        const modal = document.createElement('DIV');\r\n        modal.classList.add('modal');\r\n        modal.onclick = cerrarModal;\r\n\r\n        //Boton cerrar modal\r\n        const cerrarModalBtn = document.createElement('BUTTON');\r\n        cerrarModalBtn.textContent = 'X';\r\n        cerrarModalBtn.classList.add('btn-cerrar');\r\n        cerrarModalBtn.onclick = cerrarModal;\r\n\r\n        // Crear una imagen de copia de la imagen que se hizo clic\r\n        const imagenModal = document.createElement('img');\r\n        imagenModal.src = imagen.src;\r\n        imagenModal.alt = imagen.alt;\r\n\r\n        // Añadir la imagen al modal\r\n        modal.appendChild(imagenModal);\r\n        modal.appendChild(cerrarModalBtn);\r\n\r\n        // Añadir el modal al cuerpo del documento\r\n        const body = document.querySelector('body');\r\n        body.appendChild(modal);\r\n    }\r\n\r\n    function cerrarModal() {\r\n        // Eliminar el modal del DOM\r\n        const modal = document.querySelector('.modal');\r\n        if (modal) {\r\n            modal.classList.add('fade-out');\r\n\r\n            setTimeout(() => {\r\n                modal.remove();\r\n            }, 450);\r\n        }\r\n    }\r\n\r\n})();\r\n","//función para menú hamgurguesa:\r\n(function() {\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n        const barra = document.querySelector('.barra');\r\n        const nav = document.querySelector('.navegacion');\r\n        const boton = document.querySelector('#boton');\r\n    \r\n        if (boton) {\r\n            boton.addEventListener('click', function() {\r\n                mostrarMenu();\r\n            });\r\n        }\r\n    \r\n        function mostrarMenu() {\r\n            barra.classList.toggle('mostrar');\r\n            nav.classList.toggle('mostrar');\r\n    \r\n            if (nav.classList.contains('mostrar')) {\r\n                boton.classList.add('abierto');\r\n\r\n            } else {\r\n                boton.classList.remove('abierto');\r\n            }\r\n        }\r\n        \r\n    });\r\n\r\n})();","(function() {\r\n    const registrer_btn = document.querySelector('.alerta');\r\n    registrer_btn.addEventListener('click', function() {\r\n        registrer_btn.classList.add('mostrar_sweet');\r\n        mostrar_alerta();\r\n        setTimeout(function() {\r\n            registrer_btn.classList.remove('mostrar_sweet');\r\n        }, 100)\r\n    });\r\n\r\n\r\n\r\n    function mostrar_alerta() {\r\n        Swal.fire({\r\n            icon: \"success\",\r\n            title: \"¡Hecho!\"\r\n          });\r\n    }\r\n})();"]}